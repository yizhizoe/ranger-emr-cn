{
  "Description": "CloudFormation template for creating an EMR cluster",
  "Outputs": {
    "IPAddress": {
      "Description": "IP address of EMR cluster MasterNode",
      "Value": {
        "Fn::GetAtt": [
            "EMRSampleCluster",
            "MasterPublicDNS"
        ]
      }
    }
  },
  "Parameters": {
    "VPC": {
        "Description": "VPC ID for creating the EMR cluster",
        "Type": "AWS::EC2::VPC::Id"
    },
    "Subnet": {
        "Description": "Subnet ID for creating the EMR cluster",
        "Type": "AWS::EC2::Subnet::Id"
    },
    "EMRClusterName": {
        "Default": "EMRCluster-ApacheRanger",
        "Description": "Cluster name for the EMR",
        "Type": "String"
    },
    "emrReleaseLabel": {
        "Default": "emr-5.29.0",
        "AllowedValues" : ["emr-5.0.0","emr-5.4.0", "emr-5.16.0", "emr-5.17.0", "emr-5.29.0", "emr-5.30.0", "emr-6.0.0"],
        "Description": "Release label for the EMR cluster",
        "Type": "String"
    },
    "MasterInstanceType": {
        "Default": "m5.xlarge",
        "Description": "Instance Type of the master node",
        "Type": "String"
    },
    "CoreInstanceType": {
        "Default": "m5.xlarge",
        "Description": "Instance Type of the core node",
        "Type": "String"
    },
    "CoreInstanceCount": {
        "Default": "2",
        "Description": "Number of core instances",
        "Type": "Number"
    },
    "KeyName": {
        "Description": "Name of an existing EC2 KeyPair to enable SSH to the instances",
        "Type": "AWS::EC2::KeyPair::KeyName"
    },
    "EMRLogDir": {
        "Default": "s3://aws-logs-409341747183-cn-northwest-1/elasticmapreduce/",
        "Description": "Log Dir for the EMR cluster",
        "Type": "String"
    },
    "myDirectoryBindUser": {
      "Description": "BindUser Windows AD server",
      "Type": "String",
      "Default": "binduser@uclek.com"
    },
    "myDirectoryBindPassword": {
      "Description": "BindPassword Windows AD server",
      "Type": "String",
      "Default": "Aws@1234"
    },
    "LDAPServerIP": {
        "Description": "IP address of the LDAP server",
        "Type": "String",
        "Default": "52.83.16.206"
    },
    "RangerHostname": {
        "Description": "Internal IP address of the Ranger Server",
        "Type": "String",
        "Default": "172.31.15.216"
    },
    "rangerVersion": {
        "Default": "2.0",
        "Description": "Version of the Ranger Server.",
        "Type": "String",
        "AllowedValues" : ["0.6", "0.7", "1.0", "2.0"]
    },
    "s3artifactsRepo": {
       "Default": "s3://emr-ranger-workshop",
       "Description": "S3 repo for this exercise",
       "Type": "String"
    }
  },
  "Conditions" : {
    "emr-5.4" : {"Fn::Equals" : [{"Ref" : "emrReleaseLabel"}, "emr-5.4.0"]},
    "emr-5.0" : {"Fn::Equals" : [{"Ref" : "emrReleaseLabel"}, "emr-5.0.0"]},
    "OlderEmrVersion": {"Fn::Or": [{"Condition": "emr-5.4"}, {"Condition": "emr-5.0" }]}
  },
  "Resources": {
    "EMRSampleCluster": {
        "Properties": {
            "Applications": [
                {
                    "Name": "Hive"
                },
                {
                    "Name": "Spark"
                },
                {
                    "Name": "Hue"
                }
            ],
            "BootstrapActions": [
                {
                    "Name": "Download scripts",
                    "ScriptBootstrapAction": {
                        "Path": {
                           "Fn::Join": ["", [ {"Ref" : "s3artifactsRepo"} , "/scripts/download-scripts.sh" ] ]
                        },
                        "Args": [{ "Ref" : "s3artifactsRepo" }]
                    }
                },
                {
                    "Name": "InstallS3Plugin",
                    "ScriptBootstrapAction": {
                        "Path": {
                           "Fn::Join": ["", [ {"Ref" : "s3artifactsRepo"} , "/scripts/install-s3-ranger-plugin.sh" ] ]
                        },
                        "Args": [
                            {
                                "Ref": "RangerHostname"
                            },
                            {
                                "Ref": "rangerVersion"
                            },
                            {
                                "Ref": "s3artifactsRepo"
                            }
                        ]
                    }
                }
            ],
            "Configurations": [
              {
                "Classification": "hue-ini",
                "Configurations": [
                    {
                      "Classification": "desktop",
                      "Configurations": [
                        {
                          "Classification": "auth",
                          "ConfigurationProperties": {
                            "backend": "desktop.auth.backend.LdapBackend"
                          }
                        },
                        {
                          "Classification": "ldap",
                          "ConfigurationProperties": {
                            "base_dn": "dc=uclek,dc=com",
                            "bind_dn": {
                              "Fn::If" : [
                                "OlderEmrVersion",
                                { "Ref" : "myDirectoryBindUser" },
                                { "Fn::Select" : [ "0", { "Fn::Split": ["@", { "Ref" : "myDirectoryBindUser" }]}] }
                              ]
                            },
                            "bind_password": { "Ref" : "myDirectoryBindPassword" },
                            "create_users_on_login": "true",
                            "debug": "true",
                            "force_username_lowercase": "true",
                            "ignore_username_case": "true",
                            "ldap_url": { 
                              "Fn::Join": [
                                "",
                                [
                                    "ldap://",
                                    { "Ref" : "LDAPServerIP" }
                                ]
                              ]
                            },
                            "ldap_username_pattern": "uid=<username>,cn=users,dc=uclek,dc=com",
                            "nt_domain": "uclek.com",
                            "search_bind_authentication": "false",
                            "trace_level": "0"
                          },
                          "Configurations": [
                            {
                              "Classification": "groups",
                              "ConfigurationProperties": {
                                "group_filter": "objectclass=*",
                                "group_name_attr": "cn"
                              }
                            },
                            {
                              "Classification": "users",
                              "ConfigurationProperties": {
                                "user_filter": "objectclass=*",
                                "user_name_attr": "sAMAccountName"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
              {
                "Classification": "core-site",
                "ConfigurationProperties": 
                {
                    "hadoop.security.group.mapping": "org.apache.hadoop.security.LdapGroupsMapping",
                    "hadoop.security.group.mapping.ldap.bind.user": { "Ref" : "myDirectoryBindUser" },
                    "hadoop.security.group.mapping.ldap.bind.password": { "Ref" : "myDirectoryBindPassword" },
                    "hadoop.security.group.mapping.ldap.url": 
                      { "Fn::Join": [
                            "",
                            [
                                "ldap://",
                                { "Ref" : "LDAPServerIP" }
                            ]
                        ]
                      },
                    "hadoop.security.group.mapping.ldap.base": "dc=uclek,dc=com",
                    "hadoop.security.group.mapping.ldap.search.filter.user": "(objectclass=*)",
                    "hadoop.security.group.mapping.ldap.search.filter.group": "(objectclass=*)",
                    "hadoop.security.group.mapping.ldap.search.attr.member": "member",
                    "hadoop.security.group.mapping.ldap.search.attr.group.name": "cn"
                }
               },             
               {
                  "Classification": "emrfs-site",
                  "ConfigurationProperties": {
                    "fs.s3.consistent.retryPeriodSeconds": "10",
                    "fs.s3.consistent": "true",
                    "fs.s3.consistent.retryCount": "5",
                    "fs.s3.consistent.metadata.tableName": "EmrFSMetadata"
                  }
                },
                {
                  "Classification": "hive-site",
                  "ConfigurationProperties": {
                    "hive.metastore.client.factory.class": "com.amazonaws.glue.catalog.metastore.AWSGlueDataCatalogHiveClientFactory",
                    "hive.metastore.schema.verification": "false"
                  }
                }
              ],
            "Instances": {
                "CoreInstanceGroup": {
                    "EbsConfiguration": {
                        "EbsBlockDeviceConfigs": [
                            {
                                "VolumeSpecification": {
                                    "SizeInGB": "50",
                                    "VolumeType": "gp2"
                                },
                                "VolumesPerInstance": "1"
                            }
                        ],
                        "EbsOptimized": "true"
                    },
                    "InstanceCount": {
                        "Ref": "CoreInstanceCount"
                    },
                    "InstanceType": {
                        "Ref": "CoreInstanceType"
                    },
                    "Market": "ON_DEMAND",
                    "Name": "Core Instance"
                },
                "Ec2KeyName": {
                    "Ref": "KeyName"
                },
                "Ec2SubnetId": {
                    "Ref": "Subnet"
                },
                "MasterInstanceGroup": {
                    "InstanceCount": "1",
                    "InstanceType": {
                        "Ref": "MasterInstanceType"
                    },
                    "Market": "ON_DEMAND",
                    "Name": "Master Instance"
                },
                "TerminationProtected": "false"
            },
            "JobFlowRole": "EMR_EC2_DefaultRole",
            "ServiceRole": "EMR_DefaultRole",
            "LogUri": { 
              "Ref":"EMRLogDir"
            },
            "Name": {
                "Ref": "EMRClusterName"
            },
            "ReleaseLabel": {
                "Ref": "emrReleaseLabel"
            },
            "Tags": [
                {
                    "Key": "Name",
                    "Value": "EMR Cluster2 Ranger"
                }
            ],
            "VisibleToAllUsers": "true"
        },
        "Type": "AWS::EMR::Cluster"
        },
        "CreateHiveTables": {
            "Properties": {
                "ActionOnFailure": "CONTINUE",
                "HadoopJarStep": {
                    "Args": [
                        "/mnt/tmp/aws-blog-emr-ranger/scripts/emr-steps/createHiveTables.sh",
                        "emr-ranger-workshop"
                    ],
                    "Jar": "s3://cn-north-1.elasticmapreduce/libs/script-runner/script-runner.jar",
                    "MainClass": ""
                },
                "JobFlowId": {
                    "Ref": "EMRSampleCluster"
                },
                "Name": "CreateHiveTables"
            },
            "Type": "AWS::EMR::Step"
        },
        "InstallRangerPlugin": {
            "Properties": {
                "ActionOnFailure": "CONTINUE",
                "HadoopJarStep": {
                    "Args": [
                        "/mnt/tmp/aws-blog-emr-ranger/scripts/emr-steps/install-hive-hdfs-ranger-plugin.sh",
                        {
                            "Ref": "RangerHostname"
                        },
                        {
                            "Ref": "rangerVersion"
                        },
                        {
                            "Ref": "s3artifactsRepo"
                        }
                    ],
                    "Jar": "s3://cn-north-1.elasticmapreduce/libs/script-runner/script-runner.jar",
                    "MainClass": ""
                },
                "JobFlowId": {
                    "Ref": "EMRSampleCluster"
                },
                "Name": "InstallRangerPlugin"
            },
            "Type": "AWS::EMR::Step"
        },
        "InstallRangerPolicies": {
            "Properties": {
                "ActionOnFailure": "CONTINUE",
                "HadoopJarStep": {
                    "Args": [
                        "/mnt/tmp/aws-blog-emr-ranger/scripts/emr-steps/install-hive-hdfs-ranger-policies.sh",
                        {
                            "Ref": "RangerHostname"
                        },
                        {
                            "Fn::Join": ["", [{ "Ref": "s3artifactsRepo"}, "/inputdata"]]
                        }
                    ],
                    "Jar": "s3://cn-north-1.elasticmapreduce/libs/script-runner/script-runner.jar",
                    "MainClass": ""
                },
                "JobFlowId": {
                    "Ref": "EMRSampleCluster"
                },
                "Name": "InstallRangerPolicies"
            },
            "Type": "AWS::EMR::Step"
        },
        "LoadHDFSData": {
            "Properties": {
                "ActionOnFailure": "CONTINUE",
                "HadoopJarStep": {
                    "Args": [
                        "/mnt/tmp/aws-blog-emr-ranger/scripts/emr-steps/loadDataIntoHDFS.sh",
                        "emr-ranger-workshop"
                    ],
                    "Jar": "s3://cn-north-1.elasticmapreduce/libs/script-runner/script-runner.jar",
                    "MainClass": ""
                },
                "JobFlowId": {
                    "Ref": "EMRSampleCluster"
                },
                "Name": "LoadHDFSData"
            },
            "Type": "AWS::EMR::Step"
        }
    }
}
